name: Tests
on:
  push:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  main:
    name: Laravel Tests
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ci_node_index: [ 0 ]
        ci_node_total: [ 1 ]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_HOST: "%"
          MYSQL_USER: sail
          MYSQL_ROOT_PASSWORD: password
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: laravel_testing
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Install NPM
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install NPM dependencies
        run: npm i

      - name: Install the MySQL client
        run: |
          sudo apt-get update
          sudo apt-get -y install mysql-client

      - name: Create database/s
        run: |
          mysql --host="127.0.0.1" \
            --port="33306" \
            --user="root" \
            --password="password" -e "DROP DATABASE IF EXISTS laravel_${{ matrix.ci_node_index }}; CREATE DATABASE laravel_${{ matrix.ci_node_index }};"

          mysql --host="127.0.0.1" \
            --port="33306" \
            --user="root" \
            --password="password" -e "DROP DATABASE IF EXISTS laravel_testing_${{ matrix.ci_node_index }}; CREATE DATABASE laravel_testing_${{ matrix.ci_node_index }};"

      - name: Database access
        run: |
          mysql --host="127.0.0.1" \
            --port="33306" \
            --user="root" \
            --password="password" -e "GRANT ALL PRIVILEGES ON *.* TO 'sail'@'%'; FLUSH PRIVILEGES;"

      - name: Database connections
        run: |
          mysql --host="127.0.0.1" \
            --port="33306" \
            --user="root" \
            --password="password" -e "SET GLOBAL max_connections = 10000; SET GLOBAL mysqlx_max_connections = 10000;"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: bcmath,curl,gd,igbinary,imagick,imap,intl,ldap,mbstring,memcached,msgpack,mysql,pcov,pgsql,readline,redis,soap,sqlite3,xdebug,xml,zip
          tools: composer:v2
          ini-values: pcov.directory=app, pcov.enabled=1, pcov.directory_exclude=vendor
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Copy .env
        run: |
          cp .env.example .env
          echo -e "\n# GitHub CI" >> .env
          cat .env.github >> .env

      - name: Restart environment
        run: npm run restart -- --verbose

      - name: Run Pest
        run: ./bin/tests/parallel
        env:
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          DB_HOST: "127.0.0.1"
          DB_PORT: "33306"
          DB_USERNAME: sail
          DB_PASSWORD: password

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-${{ matrix.ci_node_index }}.xml
          flags: unittests
